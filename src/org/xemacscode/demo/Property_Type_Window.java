
package org.xemacscode.demo;

import java.awt.Color;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.layout.Border;
import javax.swing.BorderFactory;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Malanchite
 */
import javax.swing.border.MatteBorder;
public class Property_Type_Window extends javax.swing.JFrame {

    /**
     * Creates new form Property_Type_Window
     */
   
    Connection con;
    ResultSet rs;
    PreparedStatement st;
    public Property_Type_Window() {
        initComponents();
        
        try {
            //Class.forName("com.mysql.cj.jdbc.driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
            st=con.prepareStatement("select * from property_type");
            rs = st.executeQuery();
            if(rs.next())
            {
                jTextField_Name.setText(rs.getString(1));
                jTextArea_Description.setText(rs.getString(2));
            }
        } //catch (ClassNotFoundException ex) {
           // Logger.getLogger(Property_Type_Window.class.getName()).log(Level.SEVERE, null, ex);
       // } 
        catch (SQLException ex) {
            Logger.getLogger(Property_Type_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setLocationRelativeTo(null);
       
        //Set border to jpanel title
        MatteBorder panel_border = BorderFactory.createMatteBorder(0,0,3,0,new Color(153,153,255));
        jPanel_Title.setBorder(panel_border);
        
        MatteBorder button_border = BorderFactory.createMatteBorder(3,3,3,3, new Color(255,255,255));
        jButton_Add_Type.setBorder(button_border);
        jButton_Edit_Type.setBorder(button_border);
        jButton_Remove_Type.setBorder(button_border);
        jButton_Refresh_Type.setBorder(button_border);
     
        //Populate the jlist
        fillTypeList();
    }

    // Create a function to populate the JList using TYPE hashmap
    public void fillTypeList()
    {
        P_Type type = new P_Type();
        HashMap<String,Integer> map = type.getTypesMap();
        
        DefaultListModel listModel = new DefaultListModel();
        
        int i=0;
        
        for(String typeName:map.keySet())
        {
            listModel.add(i,typeName);
            i++;
        }
        jList1.setModel(listModel);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel_Title = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Id = new javax.swing.JTextField();
        jTextField_Name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Description = new javax.swing.JTextArea();
        jButton_Add_Type = new javax.swing.JButton();
        jButton_Edit_Type = new javax.swing.JButton();
        jButton_Remove_Type = new javax.swing.JButton();
        jButton_Refresh_Type = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jPanel_Title.setBackground(new java.awt.Color(0, 0, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Property Type");

        javax.swing.GroupLayout jPanel_TitleLayout = new javax.swing.GroupLayout(jPanel_Title);
        jPanel_Title.setLayout(jPanel_TitleLayout);
        jPanel_TitleLayout.setHorizontalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TitleLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabel1)
                .addContainerGap(612, Short.MAX_VALUE))
        );
        jPanel_TitleLayout.setVerticalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TitleLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Description");

        jTextField_Id.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jTextField_Name.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jTextArea_Description.setColumns(20);
        jTextArea_Description.setFont(new java.awt.Font("Malgun Gothic", 0, 16)); // NOI18N
        jTextArea_Description.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Description);

        jButton_Add_Type.setBackground(new java.awt.Color(0, 204, 204));
        jButton_Add_Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Add_Type.setText("Add");
        jButton_Add_Type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Add_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_TypeActionPerformed(evt);
            }
        });

        jButton_Edit_Type.setBackground(new java.awt.Color(0, 153, 0));
        jButton_Edit_Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Edit_Type.setText("Edit");
        jButton_Edit_Type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Edit_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Edit_TypeActionPerformed(evt);
            }
        });

        jButton_Remove_Type.setBackground(new java.awt.Color(204, 0, 102));
        jButton_Remove_Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Remove_Type.setText("Remove");
        jButton_Remove_Type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Remove_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_TypeActionPerformed(evt);
            }
        });

        jButton_Refresh_Type.setBackground(new java.awt.Color(153, 153, 153));
        jButton_Refresh_Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Refresh_Type.setText("Refresh");
        jButton_Refresh_Type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Refresh_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Refresh_TypeActionPerformed(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jButton_Add_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton_Edit_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Remove_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Refresh_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Remove_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Edit_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Add_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Refresh_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Add_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_TypeActionPerformed
       
       //add a new type
       String name = jTextField_Name.getText();
        String description = jTextArea_Description.getText();
        
        P_Type type = new P_Type(0,name,description);
        
        if(!name.trim().equals(""))
        {
            if(type.execTypeQuery("add", type))
            {
                JOptionPane.showMessageDialog(null,"New Type Added","Add Type",1);
             }
            else 
            {
                JOptionPane.showMessageDialog(null,"Operation Failed","Add Type",2);
            
            }
        }
        else {
             JOptionPane.showMessageDialog(null,"Enter the type name","Empty Name",2);
        }
        
        /*try {
            st=con.prepareStatement("Insert into property_type(name,description)values(?,?)");
            st.setString(1, jTextField3.getText());
            st.setString(2,jTextArea1.getText());
            st.executeUpdate();
            JOptionPane.showMessageDialog(this,"Added Successfully");
        } catch (SQLException ex) {
            Logger.getLogger(Property_Type_Window.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton_Add_TypeActionPerformed

    private void jButton_Remove_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_TypeActionPerformed
       
        try{
             //remove the selected type
            Integer id = Integer.valueOf(jTextField_Id.getText());


            P_Type type = new P_Type(id,"","");

            if(!jTextField_Id.getText().trim().equals(""))
            {
                //show a confirmation message before deleting 
                int yes_or_no = JOptionPane.showConfirmDialog(null,"Do you want to delete this type?","Delete type",JOptionPane.YES_NO_OPTION);
                if(yes_or_no == JOptionPane.YES_OPTION)
                {
                    if(type.execTypeQuery("remove", type))
                     {
                       JOptionPane.showMessageDialog(null,"Type Deleted","Delete Type",1);
                       
                       //clear text fields after delete
                       jTextField_Id.setText("");
                       jTextField_Name.setText("");
                       jTextArea_Description.setText("");
                       
                    }
                    else 
                    {
                        JOptionPane.showMessageDialog(null,"Operation Failed","Delete Type",2);

                    }
                } 

            }
            else {
                 JOptionPane.showMessageDialog(null,"Enter the type id","Empty Id",2);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage()+"Enter a valid type ID","Invalid ID",0);
        }
        /* try {
            st=con.prepareStatement("delete from property_type where name=?");
            st.setString(1,jTextField_Name.getText());
            st.executeUpdate();
            JOptionPane.showMessageDialog(this,"Removed Successfully");
        } catch (SQLException ex) {
            Logger.getLogger(Property_Type_Window.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton_Remove_TypeActionPerformed

    private void jButton_Edit_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_TypeActionPerformed
       
       
        try{
            //edit the selected type
            Integer id = Integer.valueOf(jTextField_Id.getText());
           String name = jTextField_Name.getText();
            String description = jTextArea_Description.getText();

            P_Type type = new P_Type(id,name,description);

            if(!name.trim().equals(""))
            {
                if(type.execTypeQuery("edit", type))
                {
                    JOptionPane.showMessageDialog(null,"Type Updated","Edit Type",1);
                 }
                else 
                {
                    JOptionPane.showMessageDialog(null,"Operation Failed","Edit Type",2);

                }
            }
            else {
                 JOptionPane.showMessageDialog(null,"Enter the type name","Empty Name",2);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage()+"Enter a valid type ID","Invalid ID",0);
        }
        /* try {
            st=con.prepareStatement("update  property_type set name=?,description=? where id=?");
            st.setString(1,jTextField_Name.getText());
            st.setString(2,jTextArea_Description.getText());
            st.setString(3,jTextField_Id.getText());
            st.executeUpdate();
            JOptionPane.showMessageDialog(this,"Edited Successfully");
        } catch (SQLException ex) {
            Logger.getLogger(Property_Type_Window.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton_Edit_TypeActionPerformed

    private void jButton_Refresh_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Refresh_TypeActionPerformed
        // TODO add your handling code here:
        fillTypeList();
    }//GEN-LAST:event_jButton_Refresh_TypeActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        //display the selected type from the list to text fields
        P_Type type = new P_Type();
        HashMap<String,Integer> map = type.getTypesMap();
        Integer typeId = map.get(jList1.getSelectedValue());
        type = type.getTypeById(typeId);
        jTextField_Id.setText(type.getId().toString());
        jTextField_Name.setText(type.getName());
        jTextArea_Description.setText(type.getDescription());
        
    }//GEN-LAST:event_jList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Property_Type_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Property_Type_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Property_Type_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Property_Type_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Property_Type_Window().setVisible(true);
            }
        });
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add_Type;
    private javax.swing.JButton jButton_Edit_Type;
    private javax.swing.JButton jButton_Refresh_Type;
    private javax.swing.JButton jButton_Remove_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_Title;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_Description;
    private javax.swing.JTextField jTextField_Id;
    private javax.swing.JTextField jTextField_Name;
    // End of variables declaration//GEN-END:variables
}
